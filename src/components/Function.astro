---
interface Parameter {
   parameter: string
   type?: string
   interface?: string
   description: string
}

interface ReturnValue {
   value: string
   type?: string
   interface?: string
   description: string
}

export interface Props {
   lang: string,
   name: string,
   parameters?: Array<Parameter>,
   returns?: Array<ReturnValue>
}

const {
   lang = "",
   name = "",
   parameters = null,
   returns = null
} = Astro.props
---

<dl class="{lang} function">
   <dt class="sig-name descname">
      <span class="pre">{name}</span>
   </dt>
   <dd>
      <slot />
      <slot name="snippet" />
   </dd>
   { parameters && 
   <dl>
      <dt class="parameters">Parameters:</dt>
      { parameters.map((item) => (
         <dd class="parameters">{item.parameter} (<em>{item.type ? item.type : item.interface}</em>) – {item.description}</dd>
      ))}
   </dl>
   }
   { returns && 
      <dl>
         <dt class="returns">Returns:</dt>
         { returns.map((item) => (
            <dd class="returns">{item.value} (<em>{item.type ? item.type : item.interface}</em>) – {item.description}</dd>
         ))}
      </dl>
      }
</dl>
