# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Adjust GmbH
# This file is distributed under the same license as the Adjust SDK
# documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Adjust SDK documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-21 17:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../unity/features/configuration/log-level.md:1
msgid "Set log level"
msgstr ""

#: ../../unity/features/configuration/log-level.md:3
msgid ""
"The Adjust SDK provides configurable log levels to return different "
"amounts of information. The following log levels are available:"
msgstr ""

#: ../../unity/features/configuration/log-level.md:8
msgid "Log level"
msgstr ""

#: ../../unity/features/configuration/log-level.md:9
msgid "Description"
msgstr ""

#: ../../unity/features/configuration/log-level.md:10
msgid "`AdjustLogLevel.Debug`"
msgstr ""

#: ../../unity/features/configuration/log-level.md:11
msgid "Enable full logging"
msgstr ""

#: ../../unity/features/configuration/log-level.md:12
msgid "`AdjustLogLevel.Info`"
msgstr ""

#: ../../unity/features/configuration/log-level.md:13
msgid "Enable more detailed logging for debugging issues"
msgstr ""

#: ../../unity/features/configuration/log-level.md:14
#: ../../unity/features/configuration/log-level.md:16
msgid "`AdjustLogLevel.Warn`"
msgstr ""

#: ../../unity/features/configuration/log-level.md:15
msgid "Return info, warnings, errors, and assert logs"
msgstr ""

#: ../../unity/features/configuration/log-level.md:17
msgid "Return warnings, errors, and assert logs"
msgstr ""

#: ../../unity/features/configuration/log-level.md:18
msgid "`AdjustLogLevel.Error`"
msgstr ""

#: ../../unity/features/configuration/log-level.md:19
msgid "Return only errors and assert logs"
msgstr ""

#: ../../unity/features/configuration/log-level.md:20
msgid "`AdjustLogLevel.Assert`"
msgstr ""

#: ../../unity/features/configuration/log-level.md:21
msgid "Return only assert logs"
msgstr ""

#: ../../unity/features/configuration/log-level.md:22
msgid "`AdjustLogLevel.Suppress`"
msgstr ""

#: ../../unity/features/configuration/log-level.md:23
msgid "Suppress all logging"
msgstr ""

#: ../../unity/features/configuration/log-level.md:26
msgid ""
"You can set your log level in the Adjust prefab menu or by calling the "
"[`setLogLevel` method](unity-setLogLevel-invocation) on your config "
"instance."
msgstr ""

#: ../../unity/fragments/AdjustConfig.md
msgid "C#"
msgstr ""

#: ../../unity/features/configuration/log-level.md:33
msgid "Disable all logging"
msgstr ""

#: ../../unity/features/configuration/log-level.md:35
msgid ""
"To disable all log output when initializing the SDK manually, call "
"`setLogLevel(AdjustLogLevel.Suppress)` on your config instance. You need "
"to set `allowSuppressLogLevel` by passing a `true` value as the third "
"argument in your `AdjustConfig` declaration."
msgstr ""

#: ../../unity/features/configuration/log-level.md:42
msgid "View compiled logs on Windows"
msgstr ""

#: ../../unity/features/configuration/log-level.md:44
msgid ""
"If your target is Windows-based and you want to see the compiled logs "
"from the SDK in **Production** mode, redirect the log output to your app "
"while testing it in **Sandbox** mode."
msgstr ""

#: ../../unity/features/configuration/log-level.md:46
msgid ""
"To register a log delegate, call the [`setLogDelegate` method](unity-"
"setLogDelegate-invocation) on your `AdjustConfig` instance."
msgstr ""

#: ../../unity/features/configuration/log-level.md:49
msgid ""
"You must call the {code}`setLogDelegate` method **before** you initialize"
" the Adjust SDK."
msgstr ""

#~ msgid "[Disable all logging](disable-all-logging)"
#~ msgstr ""

#~ msgid ""
#~ "If your target is Windows-based "
#~ "and you want to see the compiled"
#~ " logs from our library in "
#~ "**Production** mode, redirect the log "
#~ "output to your app while testing "
#~ "it in **Sandbox** mode."
#~ msgstr ""

#~ msgid ""
#~ "You can set your log level in "
#~ "the Adjust prefab menu or by "
#~ "calling the {code}`setLogLevel` method on "
#~ "your config instance."
#~ msgstr ""

#~ msgid ""
#~ "To disable all log output when "
#~ "initializing the SDK manually, call "
#~ "{code}`setLogLevel(AdjustLogLevel.Suppress)` on your "
#~ "config instance. You need to set "
#~ "{code}`allowSuppressLogLevel` by passing a "
#~ "`true` value as the third argument "
#~ "in your `AdjustConfig` declaration."
#~ msgstr ""

#~ msgid ""
#~ "To register a log delegate, call "
#~ "the {code}`setLogDelegate` method on your "
#~ "`AdjustConfig` instance."
#~ msgstr ""

#~ msgid ""
#~ "You can set your log level in "
#~ "the Adjust prefab menu or by "
#~ "calling the [`setLogLevel` method](ios-"
#~ "setLogLevel-invocation) on your config "
#~ "instance."
#~ msgstr ""

#~ msgid ""
#~ "To register a log delegate, call "
#~ "the [`setLogDelegate` method](ios-setLogDelegate-"
#~ "invocation) on your `AdjustConfig` instance."
#~ msgstr ""

